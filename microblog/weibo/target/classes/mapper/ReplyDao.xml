<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gdcp.weibo.dao.ReplyDao">
<resultMap type="com.gdcp.weibo.entity.Reply" id="replyMap-temp">
		<id column="reply_id" javaType="Long" property="replyId" />
		<result property="content" column="content" />
		<result property="createTime" column="create_time" />
		<result property="toId" column="to_id"/>
		<result property="toNickName" column="to_nick_name"/>
		<result property="toHeadImg" column="to_head_img"/>
		<association property="comment" column="comment_id"
			javaType="com.gdcp.weibo.entity.Comment">
			<id column="comment_id" property="commentId" />
			<result column="comment_id" property="commentId" />
			<result column="c_content" property="content" />
		</association>	
		<association property="fromUser" column="user_id"
			javaType="com.gdcp.weibo.entity.User">
			<id column="user_id" property="userId" />
			<result column="user_id" property="userId" />
			<result column="head_img" property="headImg" />
			<result column="nick_name" property="nickName" />
		</association>	
	</resultMap>
    <resultMap type="com.gdcp.weibo.entity.Reply" id="replyMap">
		<id column="reply_id" javaType="Long" property="replyId" />
		<result property="content" column="content" />
		<result property="createTime" column="create_time" />
		<result property="toId" column="to_id"/>
		<result property="toNickName" column="to_nick_name"/>
		<result property="toHeadImg" column="to_head_img"/>
		<association property="comment" column="comment_id"
			javaType="com.gdcp.weibo.entity.Comment">
			<id column="comment_id" property="commentId" />
			<result column="comment_id" property="commentId" />
		</association>	
		<association property="fromUser" column="user_id"
			javaType="com.gdcp.weibo.entity.User">
			<id column="user_id" property="userId" />
			<result column="head_img" property="headImg" />
			<result column="nick_name" property="nickName" />
		</association>	
	</resultMap>
		
    <select id="queryReplyListByCommentId" resultMap="replyMap">
		SELECT
		reply_id,
		comment_id,	
		from_id,
		nick_name,
		head_img,		
		to_id,		
		to_nick_name,
		to_head_img,	
		content,
		r.create_time,
		u.user_id		
		FROM
		tb_reply r,
		tb_user u
	    WHERE
		comment_id = #{commentId} 
		AND
		from_id = u.user_id
		order by
		r.create_time desc
	</select>
	
	<select id="queryReplyListByToId" resultMap="replyMap-temp">
		SELECT
		reply_id,
		r.comment_id,
		from_id,
		u.user_id,
		u.nick_name,
		u.head_img,
		to_id,		
		to_nick_name,
		to_head_img,	
		r.content,
		r.create_time,
		c.content AS c_content,
		c.comment_id
		FROM
		tb_reply r,
		tb_user u,
		tb_comment c
	    WHERE
		r.to_id = #{toId} 
		AND
		r.to_id = u.user_id
		AND
		r.comment_id = c.comment_id
		order by
		r.create_time desc
	</select>
	
	<insert id="insertReply" useGeneratedKeys="true"
		keyProperty="replyId" keyColumn="reply_id">
		INSERT INTO
		tb_reply(comment_id,from_id,to_id,to_nick_name,to_head_img,content,create_time)
		VALUES(#{comment.commentId},#{fromUser.userId},#{toId},#{toNickName},#{toHeadImg},#{content},#{createTime})
	</insert>
	
	<delete id="deleteReplyById">
	   DELETE
	    FROM tb_reply
	    WHERE
	      from_id = #{fromId}
	    AND
	      reply_id = #{replyId}
	</delete>
</mapper>